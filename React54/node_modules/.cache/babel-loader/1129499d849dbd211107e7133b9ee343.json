{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Frontend\\\\React54\\\\src\\\\pages\\\\HomePage.jsx\";\nimport React, { Component } from 'react'; //Connect Redux\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router'; // import { MovieManageReducer } from '../../redux/reducers/MovieManageReducer';\n\nimport { getMovieListAction, getMovieDetailAction, searchLCAction } from '../redux/actions/MovieManageAction';\nimport Slider from '../components/layout/Slider';\nimport ComingMovies from '../components/layout/ComingMovies';\nimport ShowingMovies from '../components/layout/ShowingMovies';\nimport ShowtimesHome from '../components/layout/ShowtimesHome';\nimport moment from 'moment';\nimport { compose } from 'redux';\nimport { Spin, Select, Form, Button } from 'antd';\nimport { showMessageAlert } from '../templates/SweetAlert';\nconst {\n  Option\n} = Select;\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDate = () => {\n      let resultDates = [];\n      const current = moment();\n      let n = 0;\n\n      while (n < 7) {\n        // console.log(n)\n        resultDates.push(current.format(\"YYYY-MM-DD\"));\n        current.add(1, \"day\");\n        n++;\n      }\n\n      return resultDates;\n    };\n\n    this.compareDate = () => {};\n\n    this.handleOnChangeMovie = maPhim => {\n      this.props.getMovieDetail(maPhim);\n      this.setState({\n        maPhim: maPhim\n      });\n      console.log(\"maPhim\", maPhim);\n    };\n\n    this.handleOnChangeTheater = maCumRap => {\n      this.setState({\n        maCumRap: maCumRap\n      }, console.log(\"this.state\", this.state.maCumRap));\n    };\n\n    this.handleOnChangeDate = date => {\n      this.setState({\n        showtimes: this.props.lichChieuPhim.LichChieu,\n        date: date\n      });\n    };\n\n    this.handleOnChangeTime = time => {\n      this.setState({\n        time: time\n      });\n    };\n\n    this.renderTheater = () => {\n      // console.log(\"this.props.lichChieuPhim\", this.props.lichChieuPhim);\n      return this.props.lichChieuPhim.map((lc, index) => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          value: lc.MaCumRap,\n          children: lc.TenCumRap\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this);\n      });\n    };\n\n    this.renderDates = () => {\n      return this.state.dates.map((date, index) => {\n        let dateString = date.toString();\n        let dateName = moment(date).format('dddd');\n        let dateCurrent = moment().format('dddd');\n\n        if (dateName === dateCurrent) {\n          dateName = 'Today';\n        }\n\n        return /*#__PURE__*/_jsxDEV(Option, {\n          value: dateString,\n          children: [dateString, \" / \", dateName]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this);\n      });\n    };\n\n    this.renderShowtime = () => {\n      if (this.props.lichChieuPhim.length > 0) {\n        return this.props.lichChieuPhim.map(lc => {\n          return lc.ChiTietLichChieu.map((chiTiet, index) => {\n            let thoiGianView = new Date(chiTiet.NgayChieuGioChieu);\n            let time = thoiGianView.toLocaleTimeString();\n            let thoiGianChieu = moment(new Date(chiTiet.NgayChieuGioChieu)).format(\"DD.MM.YYYY\");\n            var now = moment(this.state.date).format(\"DD.MM.YYYY\"); //todays date\n\n            var startDate = moment(thoiGianChieu, \"DD.MM.YYYY\");\n            var endDate = moment(now, \"DD.MM.YYYY\");\n            var duration = endDate.diff(startDate, 'days'); // let count = 0;\n\n            if (duration === 0) {\n              // count = count + 1;\n              return /*#__PURE__*/_jsxDEV(Option, {\n                className: \"select__search\",\n                value: time,\n                children: time\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 29\n              }, this);\n            }\n          });\n        });\n      }\n    };\n\n    this.eventSearchBooking = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (err) {\n          return;\n        }\n\n        let dateTime = values.date + ' ' + values.time;\n        console.log(\"value\", values, moment(dateTime).format(\"YYYY-MM-DD HH:mm:ss\"));\n        this.props.searchLCAction(values.maPhim, values.maCumRap, moment(dateTime).format(\"YYYY-MM-DD HH:mm:ss\"));\n        this.setState({\n          isSearchButton: true\n        });\n        setTimeout(() => {\n          let maLichChieu = this.props.maLichChieuSearch;\n\n          if (maLichChieu != 0) {\n            this.props.history.push(\"/bookingticket/\" + maLichChieu);\n            this.setState({\n              isSearchButton: false\n            });\n          } else {\n            showMessageAlert('', 'Not found result', 'warning');\n            this.setState({\n              isSearchButton: false\n            });\n          }\n        }, 3000);\n      });\n    };\n\n    this.state = {\n      dates: [],\n      maPhim: '',\n      date: '',\n      maCumRap: '',\n      time: '',\n      theater: [],\n      isSearchButton: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      dates: this.getDate()\n    });\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage\",\n      children: [/*#__PURE__*/_jsxDEV(Slider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-search\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.eventSearchBooking,\n          className: \"login-form d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            children: getFieldDecorator('maPhim', {\n              rules: [{\n                required: true,\n                message: 'Please choose movie!'\n              }]\n            })( /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"-- Select a movie --\",\n              onChange: this.handleOnChangeMovie,\n              children: this.props.movieArray.map((movie, index) => {\n                return /*#__PURE__*/_jsxDEV(Option, {\n                  value: movie.MaPhim,\n                  children: movie.TenPhim\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: getFieldDecorator('maCumRap', {\n              rules: [{\n                required: true,\n                message: 'Please choose theater!'\n              }]\n            })( /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"-- Select a theater --\",\n              onChange: this.handleOnChangeTheater,\n              children: this.renderTheater()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: getFieldDecorator('date', {\n              rules: [{\n                required: true,\n                message: 'Please choose date!'\n              }]\n            })( /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"-- Select a date --\",\n              onChange: this.handleOnChangeDate,\n              children: this.renderDates()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: getFieldDecorator('time', {\n              rules: [{\n                required: true,\n                message: 'Please input your time!'\n              }]\n            })( /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"-- Select a showtime --\",\n              children: this.renderShowtime()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              htmlType: \"submit\",\n              children: this.state.isSearchButton ? /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginTop: \"-16px\"\n                },\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"lds-ellipsis\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 127\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 138\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 149\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 160\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 97\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 61\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"animation__text center\",\n                children: \"BOOKING NOW\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 185\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ShowingMovies, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ComingMovies, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ShowtimesHome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    movieArray: state.MovieManageReducer.movieArray,\n    lichChieuPhim: state.MovieManageReducer.lichChieuPhim,\n    maLichChieuSearch: state.MovieManageReducer.maLichChieuSearch\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getMovieList: () => {\n      dispatch(getMovieListAction());\n    },\n    getMovieDetail: maPhim => {\n      dispatch(getMovieDetailAction(maPhim));\n    },\n    searchLCAction: (maPhim, maCumRap, ngayChieuGioChieu) => {\n      dispatch(searchLCAction(maPhim, maCumRap, ngayChieuGioChieu));\n    }\n  };\n};\n\nexport default withRouter(compose(Form.create(), connect(mapStateToProps, mapDispatchToProps))(HomePage));","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Frontend/React54/src/pages/HomePage.jsx"],"names":["React","Component","connect","withRouter","getMovieListAction","getMovieDetailAction","searchLCAction","Slider","ComingMovies","ShowingMovies","ShowtimesHome","moment","compose","Spin","Select","Form","Button","showMessageAlert","Option","HomePage","constructor","props","getDate","resultDates","current","n","push","format","add","compareDate","handleOnChangeMovie","maPhim","getMovieDetail","setState","console","log","handleOnChangeTheater","maCumRap","state","handleOnChangeDate","date","showtimes","lichChieuPhim","LichChieu","handleOnChangeTime","time","renderTheater","map","lc","index","MaCumRap","TenCumRap","renderDates","dates","dateString","toString","dateName","dateCurrent","renderShowtime","length","ChiTietLichChieu","chiTiet","thoiGianView","Date","NgayChieuGioChieu","toLocaleTimeString","thoiGianChieu","now","startDate","endDate","duration","diff","eventSearchBooking","e","preventDefault","form","validateFields","err","values","dateTime","isSearchButton","setTimeout","maLichChieu","maLichChieuSearch","history","theater","componentDidMount","render","getFieldDecorator","rules","required","message","movieArray","movie","MaPhim","TenPhim","marginTop","mapStateToProps","MovieManageReducer","mapDispatchToProps","dispatch","getMovieList","ngayChieuGioChieu","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n//Connect Redux\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router'\n// import { MovieManageReducer } from '../../redux/reducers/MovieManageReducer';\nimport { getMovieListAction, getMovieDetailAction, searchLCAction } from '../redux/actions/MovieManageAction';\nimport Slider from '../components/layout/Slider';\nimport ComingMovies from '../components/layout/ComingMovies';\nimport ShowingMovies from '../components/layout/ShowingMovies';\nimport ShowtimesHome from '../components/layout/ShowtimesHome';\nimport moment from 'moment'\nimport { compose } from 'redux';\n\n\nimport { Spin, Select, Form, Button} from 'antd'\nimport { showMessageAlert } from '../templates/SweetAlert';\nconst { Option } = Select;\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dates: [],\n            maPhim: '',\n            date: '',\n            maCumRap: '',\n            time: '',\n            theater: [],\n            isSearchButton: false\n        }\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            dates: this.getDate()\n        })\n    }\n\n    getDate = () => {\n        let resultDates = [];\n        const current = moment()\n        let n = 0\n        while (n < 7) {\n            // console.log(n)\n            resultDates.push(current.format(\"YYYY-MM-DD\"))\n            current.add(1, \"day\")\n            n++;\n\n        }\n        return resultDates;\n    }\n\n    compareDate = () => {\n\n    }\n\n    handleOnChangeMovie = (maPhim) => {\n        this.props.getMovieDetail(maPhim);\n        this.setState({\n            maPhim: maPhim\n        })\n        console.log(\"maPhim\", maPhim);\n    }\n\n    handleOnChangeTheater = (maCumRap) => {\n        this.setState({\n            maCumRap: maCumRap\n        },\n            console.log(\"this.state\", this.state.maCumRap)\n        )\n    }\n\n    handleOnChangeDate = (date) => {\n        this.setState({\n            showtimes: this.props.lichChieuPhim.LichChieu,\n            date: date\n        })\n    }\n\n    handleOnChangeTime = (time) => {\n        this.setState({\n            time: time\n        })\n    }\n\n    renderTheater = () => {\n        // console.log(\"this.props.lichChieuPhim\", this.props.lichChieuPhim);\n        return this.props.lichChieuPhim.map((lc, index) => {\n            return (\n                <Option key={index} value={lc.MaCumRap}>{lc.TenCumRap}</Option>\n            )\n        })\n    }\n\n    renderDates = () => {\n        return this.state.dates.map((date, index) => {\n            let dateString = date.toString();\n            let dateName = moment(date).format('dddd');\n            let dateCurrent = moment().format('dddd');\n            if (dateName === dateCurrent) {\n                dateName = 'Today'\n            }\n            return (\n                <Option key={index} value={dateString}>{dateString} / {dateName}</Option>\n            )\n        })\n    }\n\n    renderShowtime = () => {\n        if (this.props.lichChieuPhim.length > 0) {\n            return this.props.lichChieuPhim.map((lc) => {\n                return lc.ChiTietLichChieu.map((chiTiet, index) => {\n                    let thoiGianView = new Date(chiTiet.NgayChieuGioChieu);\n                    let time = thoiGianView.toLocaleTimeString();\n                    let thoiGianChieu = moment(new Date(chiTiet.NgayChieuGioChieu)).format(\"DD.MM.YYYY\");\n                    var now = moment(this.state.date).format(\"DD.MM.YYYY\"); //todays date\n                    var startDate = moment(thoiGianChieu, \"DD.MM.YYYY\");\n                    var endDate = moment(now, \"DD.MM.YYYY\");\n                    var duration = endDate.diff(startDate, 'days');\n                    // let count = 0;\n                    if (duration === 0) {\n                        // count = count + 1;\n                        return (\n                            <Option className=\"select__search\" key={index} value={time}>{time}</Option>\n                        )\n                    }\n                })\n            })\n        }\n    }\n\n    eventSearchBooking = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n            let dateTime = values.date + ' ' + values.time;\n            console.log(\"value\", values, moment(dateTime).format(\"YYYY-MM-DD HH:mm:ss\"));\n            this.props.searchLCAction(values.maPhim, values.maCumRap, moment(dateTime).format(\"YYYY-MM-DD HH:mm:ss\"));\n            \n            this.setState({isSearchButton: true})\n\n            setTimeout(() => {\n                let maLichChieu = this.props.maLichChieuSearch;\n                if ( maLichChieu != 0) {\n                    this.props.history.push(\"/bookingticket/\" + maLichChieu);\n                    this.setState({\n                        isSearchButton: false\n                    });\n                }\n                else {\n                    showMessageAlert('','Not found result', 'warning')\n                    this.setState({\n                        isSearchButton: false\n                    });\n                }\n            }, 3000);\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div className=\"homepage\">\n\n                {/* SLIDER */}\n                <Slider />\n                {/* END SLIDER */}\n\n                {/* SEARCH */}\n\n                <div className=\"top-search\">\n                    <Form onSubmit={this.eventSearchBooking} className=\"login-form d-flex\">\n                        <Form.Item>\n                            {getFieldDecorator('maPhim', {\n                                rules: [{ required: true, message: 'Please choose movie!' }],\n                            })(\n                                <Select placeholder=\"-- Select a movie --\" onChange={this.handleOnChangeMovie}>\n                                    {this.props.movieArray.map((movie, index) => {\n                                        return (\n                                            <Option key={index} value={movie.MaPhim}>{movie.TenPhim}</Option>\n                                        )\n                                    })}\n                                </Select>\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('maCumRap', {\n                                rules: [{ required: true, message: 'Please choose theater!' }],\n                            })(\n                                <Select placeholder=\"-- Select a theater --\" onChange={this.handleOnChangeTheater}>\n                                    {this.renderTheater()}\n                                </Select>\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('date', {\n                                rules: [{ required: true, message: 'Please choose date!' }],\n                            })(\n                                <Select placeholder=\"-- Select a date --\" onChange={this.handleOnChangeDate}>\n                                    {this.renderDates()}\n                                </Select>\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('time', {\n                                rules: [{ required: true, message: 'Please input your time!' }],\n                            })(\n                                <Select placeholder=\"-- Select a showtime --\">\n                                    {\n                                        this.renderShowtime()\n                                    }\n                                </Select>\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            <Button htmlType=\"submit\">\n                                {this.state.isSearchButton ?<span style={{marginTop: \"-16px\"}}> <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></span>:<span className=\"animation__text center\">BOOKING NOW</span>}\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                    {/* <select name=\"select\" id=\"phim\" onChange={this.handleOnChangeMovie}>\n                        <option >-- MOVIE --</option>\n                        {this.props.movieArray.map((movie, index) => {\n                            return (\n                                <option className=\"select__search\" key={index} value={movie.MaPhim}>{movie.TenPhim}</option>\n                            )\n                        })}\n                    </select>\n                  \n                    <select name=\"select\" id=\"rap\" onChange={this.handleOnChangeTheater}>\n                        <option>-- THEATER --</option>\n                        {this.renderTheater()}\n                    </select>\n                    <select onChange={this.handleOnChangeDate}>\n                        <option value=\"hide\">-- DATE --</option>\n                        {\n                            \n                        }\n                    </select>\n                    <select id=\"xuatchieu\" onChange={this.handleOnChangeTime}>\n                        <option>-- SHOWTIME --</option>\n                        {this.renderShowtime()}\n                    </select>\n\n                    <button onClick={() => { this.eventSearchBooking() }}>\n                        <span className=\"animation__text center\">BOOKING NOW</span>\n                    </button> */}\n                </div>\n                {/* END SEARCH */}\n\n                {/* SHOWING MOVIE */}\n                <ShowingMovies />\n                {/* END SHOWING MOVIE */}\n\n                {/* COMING SOON MOVIES */}\n                <ComingMovies />\n                {/* COMING SOON MOVIES */}\n\n                {/* SHOWTIMES */}\n                <ShowtimesHome />\n                {/* END SHOWTIMES */}\n            </div>\n        )\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        movieArray: state.MovieManageReducer.movieArray,\n        lichChieuPhim: state.MovieManageReducer.lichChieuPhim,\n        maLichChieuSearch: state.MovieManageReducer.maLichChieuSearch\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getMovieList: () => {\n            dispatch(getMovieListAction())\n        },\n        getMovieDetail: (maPhim) => {\n            dispatch(getMovieDetailAction(maPhim))\n        },\n        searchLCAction: (maPhim, maCumRap, ngayChieuGioChieu) => {\n            dispatch(searchLCAction(maPhim, maCumRap, ngayChieuGioChieu))\n        }\n    }\n}\n\nexport default (withRouter)(compose(\n    Form.create(),\n    connect(mapStateToProps, mapDispatchToProps)\n)(HomePage));"]},"metadata":{},"sourceType":"module"}