{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\React54\\\\src\\\\pages\\\\BookingTicket\\\\Seat.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bookingSeatAction } from '../../redux/actions/BookingManageAction';\nimport { isEqual } from 'lodash';\nimport { element } from 'prop-types';\nimport { showMessageAlert } from '../../templates/SweetAlert';\nimport { connection } from '../../index';\nimport { settings } from '../../config/settings';\n\nclass Seat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderGhe = () => {\n      const {\n        ghe\n      } = this.props;\n      let classTrangThaiGhe = 'ghe ';\n      let disabled = ghe.DaDat ? true : false; // let tenGhe = ghe.DaDat ? 'X' : ghe.STT;\n\n      let tenGhe = ghe.STT; // console.log(\"danhSachGheInvoke\", this.props.objectDsGheDangChon);\n\n      let tempArray = this.props.objectDsGheDangChon;\n      tempArray.map(item => {\n        let tempDsGhe = JSON.parse(item.danhSachGhe);\n        tempDsGhe.map(gheRealTime => {\n          if (gheRealTime.MaGhe === ghe.MaGhe) {\n            console.log(\"tempDsGhe\", gheRealTime);\n            let taiKhoan = JSON.parse(localStorage.getItem(settings.userLogin)).TaiKhoan;\n\n            if (item.taiKhoan !== taiKhoan) {\n              disabled = true;\n              classTrangThaiGhe += 'diffUserChoosing ';\n            }\n          }\n        });\n      });\n\n      if (ghe.DaDat) {\n        classTrangThaiGhe += ghe.DaDat ? 'gheDaDat ' : ' ';\n      } else {\n        if (this.state.dangDat) {\n          classTrangThaiGhe += 'gheDangDat ';\n        } else {\n          classTrangThaiGhe += ghe.LoaiGhe === 'Thường' ? 'ghe ' : ghe.LoaiGhe === 'Vip' ? 'gheVip ' : 'gheDoi';\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"idghe\",\n          onClick: this.chonGhe,\n          className: `${classTrangThaiGhe}`,\n          disabled: disabled,\n          children: this.state.dangDat ? tenGhe : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.chonGhe = () => {\n      // connection.invoke(\"SendListGhe\", \"abc\", JSON.stringify(this.props.ghe), this.props.maLichChieu).catch(err => console.error(err.toString()));;   \n      //Sau khi setState thay đổi trang thái ghế sẽ đưa dữ liệu lên reducer xử lý\n      if (this.props.danhSachGheDaDat.length < 10) {\n        this.setState({\n          dangDat: !this.state.dangDat\n        }, () => {\n          const gheDuocChon = {\n            MaGhe: this.props.ghe.MaGhe,\n            GiaVe: this.props.ghe.GiaVe,\n            STT: this.props.ghe.STT,\n            TenGhe: this.props.ghe.TenGhe,\n            DangDat: this.state.dangDat\n          };\n          this.props.datGhe(gheDuocChon, this.props.maLichChieu); //Gọi hàm đưa lên reducer\n        });\n      } else {\n        if (this.state.dangDat) {\n          this.setState({\n            dangDat: false\n          }, () => {\n            const gheDuocChon = {\n              MaGhe: this.props.ghe.MaGhe,\n              GiaVe: this.props.ghe.GiaVe,\n              STT: this.props.ghe.STT,\n              TenGhe: this.props.ghe.TenGhe,\n              DangDat: this.state.dangDat\n            };\n            this.props.datGhe(gheDuocChon, this.props.maLichChieu); //Gọi hàm đưa lên reducer\n          });\n        } else {\n          showMessageAlert('Warning', 'Maximum is 10 tickets!!', 'warning');\n        }\n      }\n    };\n\n    this.alertMessage = () => {\n      console.log(\"Maximum is 10 tickets!!!\");\n    };\n\n    this.kiemTraGheChon = () => {};\n\n    this.state = {\n      dangDat: false,\n      content: '',\n      danhSachGheDaDat: []\n    };\n  } // static getDerivedStateFromProps(nextProps, prevState) {\n  //     // console.log(\"nextProps\", nextProps);\n  //     // console.log(\"prevState\", prevState);\n  //     if(nextProps.danhSachGheDaDat !== prevState.danhSachGheDaDat){\n  //         // connection.invoke(\"SendListGhe\", \"abc\", nextProps.danhSachGheDaDat, nextProps.maLichChieu);            \n  //         // return { ...prevState, danhSachGheDangDat: nextProps.danhSachGheDaDat,}\n  //     }\n  //     return null;\n  // }\n\n\n  componentDidUpdate(nextProps, nextState) {}\n\n  render() {\n    // console.log(this.state.content);\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: this.renderGhe()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    danhSachGheDaDat: state.BookingManageReducer.danhSachGheDaDat,\n    objectDsGheDangChon: state.BookingManageReducer.objectDsGheDangChon\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    datGhe: (gheDuocChon, maLichChieu) => {\n      dispatch(bookingSeatAction(gheDuocChon, maLichChieu));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Seat);","map":{"version":3,"sources":["C:/Users/Acer/Desktop/React54/src/pages/BookingTicket/Seat.jsx"],"names":["React","Component","Fragment","connect","bookingSeatAction","isEqual","element","showMessageAlert","connection","settings","Seat","constructor","props","renderGhe","ghe","classTrangThaiGhe","disabled","DaDat","tenGhe","STT","tempArray","objectDsGheDangChon","map","item","tempDsGhe","JSON","parse","danhSachGhe","gheRealTime","MaGhe","console","log","taiKhoan","localStorage","getItem","userLogin","TaiKhoan","state","dangDat","LoaiGhe","chonGhe","danhSachGheDaDat","length","setState","gheDuocChon","GiaVe","TenGhe","DangDat","datGhe","maLichChieu","alertMessage","kiemTraGheChon","content","componentDidUpdate","nextProps","nextState","render","mapStateToProps","BookingManageReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux';\nimport { bookingSeatAction } from '../../redux/actions/BookingManageAction';\nimport { isEqual } from 'lodash';\nimport { element } from 'prop-types';\nimport { showMessageAlert } from '../../templates/SweetAlert';\nimport { connection } from '../../index'\nimport { settings } from '../../config/settings';\n\nclass Seat extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dangDat: false,\n            content: '',\n            danhSachGheDaDat: [],\n        }\n    }\n\n\n    // static getDerivedStateFromProps(nextProps, prevState) {\n    //     // console.log(\"nextProps\", nextProps);\n    //     // console.log(\"prevState\", prevState);\n\n    //     if(nextProps.danhSachGheDaDat !== prevState.danhSachGheDaDat){\n    //         // connection.invoke(\"SendListGhe\", \"abc\", nextProps.danhSachGheDaDat, nextProps.maLichChieu);            \n    //         // return { ...prevState, danhSachGheDangDat: nextProps.danhSachGheDaDat,}\n    //     }\n    //     return null;\n    // }\n\n    renderGhe = () => {\n        const { ghe } = this.props;\n        let classTrangThaiGhe = 'ghe ';\n        let disabled = ghe.DaDat ? true : false;\n        // let tenGhe = ghe.DaDat ? 'X' : ghe.STT;\n        let tenGhe = ghe.STT;\n        // console.log(\"danhSachGheInvoke\", this.props.objectDsGheDangChon);\n        let tempArray =  this.props.objectDsGheDangChon;\n        tempArray.map((item) => {\n            let tempDsGhe = JSON.parse(item.danhSachGhe);        \n            tempDsGhe.map((gheRealTime) => {\n                if (gheRealTime.MaGhe === ghe.MaGhe) {\n                    console.log(\"tempDsGhe\", gheRealTime);\n                    let taiKhoan = JSON.parse(localStorage.getItem(settings.userLogin)).TaiKhoan;\n                    if (item.taiKhoan !== taiKhoan){\n                        disabled = true;\n                        classTrangThaiGhe += 'diffUserChoosing ';\n                    }\n                }\n            })\n        })\n        if (ghe.DaDat) {\n            classTrangThaiGhe += ghe.DaDat ? 'gheDaDat ' : ' ';\n        } else {\n            if (this.state.dangDat) {\n                classTrangThaiGhe += 'gheDangDat ';\n            } else {\n                classTrangThaiGhe += ghe.LoaiGhe === 'Thường' ? 'ghe ' : ghe.LoaiGhe === 'Vip' ? 'gheVip ' : 'gheDoi';\n            }\n        }\n        return (\n            <Fragment>\n                <button id=\"idghe\" onClick={this.chonGhe} className={`${classTrangThaiGhe}`} disabled={disabled}>\n                    {this.state.dangDat ? tenGhe : ''}\n                </button>\n            </Fragment>)\n    }\n\n    chonGhe = () => {\n        // connection.invoke(\"SendListGhe\", \"abc\", JSON.stringify(this.props.ghe), this.props.maLichChieu).catch(err => console.error(err.toString()));;   \n\n        //Sau khi setState thay đổi trang thái ghế sẽ đưa dữ liệu lên reducer xử lý\n        if (this.props.danhSachGheDaDat.length < 10) {\n            this.setState({\n                dangDat: !this.state.dangDat\n            }, () => {\n                const gheDuocChon = {\n                    MaGhe: this.props.ghe.MaGhe,\n                    GiaVe: this.props.ghe.GiaVe,\n                    STT: this.props.ghe.STT,\n                    TenGhe: this.props.ghe.TenGhe,\n                    DangDat: this.state.dangDat\n                }\n                this.props.datGhe(gheDuocChon, this.props.maLichChieu); //Gọi hàm đưa lên reducer\n            })\n        }\n        else {\n            if (this.state.dangDat) {\n                this.setState({\n                    dangDat: false\n                }, () => {\n                    const gheDuocChon = {\n                        MaGhe: this.props.ghe.MaGhe,\n                        GiaVe: this.props.ghe.GiaVe,\n                        STT: this.props.ghe.STT,\n                        TenGhe: this.props.ghe.TenGhe,\n                        DangDat: this.state.dangDat\n                    }\n                    this.props.datGhe(gheDuocChon, this.props.maLichChieu); //Gọi hàm đưa lên reducer\n                })\n            }\n            else {\n                showMessageAlert('Warning', 'Maximum is 10 tickets!!', 'warning')\n            }\n        }\n    }\n\n    componentDidUpdate(nextProps, nextState) {\n\n    }\n\n    alertMessage = () => {\n        console.log(\"Maximum is 10 tickets!!!\");\n    }\n\n\n    kiemTraGheChon = () => {\n\n    }\n\n    render() {\n        // console.log(this.state.content);\n\n        return (\n            <Fragment>\n                {this.renderGhe()}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        danhSachGheDaDat: state.BookingManageReducer.danhSachGheDaDat,\n        objectDsGheDangChon: state.BookingManageReducer.objectDsGheDangChon\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        datGhe: (gheDuocChon, maLichChieu) => {\n            dispatch(bookingSeatAction(gheDuocChon, maLichChieu))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Seat)"]},"metadata":{},"sourceType":"module"}