{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Frontend\\\\React54\\\\src\\\\components\\\\layoutAdmin\\\\MovieMange\\\\FormMovieAction.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox, Form, Input, InputNumber, Button, DatePicker, Row, Col, Upload, Icon } from 'antd'; // Popconfirm, Icon\n\nimport moment from 'moment';\nimport { compose } from 'redux'; // Redux\n\nimport { getMovieDetailAction, updateMovieAction, createMovieAction, UploadHinhAnhAction } from '../../../redux/actions/MovieManageAction';\nimport { isEqual } from 'lodash';\nconst {\n  TextArea\n} = Input;\nconst dateFormat = \"DD/MM/YYYY\";\n\nconst dummyRequest = ({\n  file,\n  onSuccess\n}) => {\n  setTimeout(() => {\n    onSuccess(\"ok\");\n  }, 0);\n};\n\nclass FormMovieAction extends Component {\n  constructor(props) {\n    super(props);\n\n    this.uploadHinhAnh = (tenPhim, fileHinhAnh) => {\n      var formData = new FormData();\n      formData.set('tenPhim', tenPhim);\n      formData.append('file', fileHinhAnh.originFileObj);\n      this.props.uploadHinhAnh(formData);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (err) {\n          return;\n        }\n\n        var hinhAnh = values['HinhAnh'];\n        let hinhAnhFinal;\n        let fileHinhAnh;\n        hinhAnh.map((img, i) => {\n          console.log(img);\n\n          if (i === 0) {\n            hinhAnhFinal = img.name;\n            fileHinhAnh = img;\n          }\n        });\n\n        if (this.state.maPhim) {\n          const updateValues = { ...values,\n            'HinhAnh': hinhAnhFinal,\n            'NgayKhoiChieu': values['NgayKhoiChieu'].format('DD/MM/YYYY')\n          };\n          this.props.updateMovie(updateValues);\n          setTimeout(() => {\n            if (this.props.updateResult === \"Cập nhật phim thành công!\") {\n              this.uploadHinhAnh(updateValues.TenPhim, fileHinhAnh);\n            }\n          }, 3000); // this.props.history.push('/movieadmin');\n        } else {\n          const createValues = { ...values,\n            'HinhAnh': hinhAnhFinal,\n            'NgayKhoiChieu': values['NgayKhoiChieu'].format('YYYY-MM-DD')\n          };\n          console.log(\"createValues\", createValues);\n          this.props.createMovie(createValues);\n          setTimeout(() => {\n            if (this.props.createResult === \"Thêm phim thành công!\") {\n              this.uploadHinhAnh(createValues.TenPhim, fileHinhAnh);\n            }\n          }, 3000);\n        }\n      });\n    };\n\n    this.normFile = e => {\n      console.log(\"Upload event:\", e);\n\n      if (Array.isArray(e)) {\n        return e;\n      }\n\n      return e && e.fileList;\n    };\n\n    this.cutString = string => {\n      var NewText = string.replace(\"https://localhost:44350/HinhAnh/\", \"\");\n      return NewText;\n    };\n\n    this.state = { ...this.state,\n      maPhim: this.props.match.params.MaPhim,\n      movieInfor: {\n        MaPhim: \"\",\n        TenPhim: \"\",\n        BiDanh: \"\",\n        Trailer: \"\",\n        HinhAnh: \"\",\n        MoTa: \"\",\n        NgayKhoiChieu: \"\",\n        DanhGia: \"\",\n        DienVien: \"\",\n        DaoDien: \"\",\n        DoTuoi: \"\",\n        DaXoa: false,\n        KhoiChieu: false,\n        SapChieu: false\n      },\n      selectedFile: null,\n      selectedFileList: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state.maPhim);\n\n    if (this.state.maPhim) {\n      this.props.getMovieDetail(this.state.maPhim);\n    }\n  } // componentWillReceiveProps(nextProps) {\n  //     // console.log(\"nextProps\", nextProps);        \n  //     if (!isEqual(nextProps.movieInfor.MaPhim, this.state.MaPhim)) {\n  //         this.setState({ ...this.state, movieInfor: nextProps.movieInfor });\n  //     }\n  // }\n\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // console.log(\"nextProps\", nextProps);\n    // console.log(\"prevState\", prevState);\n    if (prevState.maPhim) {\n      if (!isEqual(nextProps.movieInfor.MaPhim, prevState.MaPhim)) {\n        return { ...prevState,\n          movieInfor: nextProps.movieInfor\n        };\n      }\n    }\n\n    return null;\n  } // componentWillReceiveProps(nextProps,nextState){\n  //     console.log(nextProps);\n  //     //Nay het xai dc roi\n  //     this.setState({\n  //         movieInfor: nextProps.movieInfor      \n  //     },() => {\n  //         console.log(\"setState\", this.state.movieInfor);\n  //     })\n  // }\n\n\n  handleChange(field, e) {\n    const movieInfor = Object.assign({}, this.state.movieInfor, {\n      [field]: e.target.value\n    });\n    this.setState(Object.assign({}, this.state, {\n      movieInfor\n    }));\n  }\n\n  render() {\n    const movie = this.state.movieInfor; // console.log(\"movie\", movie);    \n\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 14\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          label: \"M\\xE3 Phim\",\n          children: getFieldDecorator('MaPhim', {\n            rules: [{\n              required: false,\n              message: 'Hãy nhập tên phim !'\n            }],\n            initialValue: movie.MaPhim\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          label: \"T\\xEAn Phim\",\n          children: getFieldDecorator('TenPhim', {\n            rules: [{\n              required: true,\n              message: 'Hãy nhập tên phim !'\n            }],\n            onChange: this.handleChange.bind(this, 'TenPhim'),\n            initialValue: movie.TenPhim\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"H\\xE3y nh\\u1EADp t\\xEAn phim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          label: \"Trailer\",\n          children: getFieldDecorator('Trailer', {\n            rules: [{\n              required: true,\n              message: 'Hãy nhập trailer !'\n            }],\n            initialValue: movie.Trailer\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"H\\xE3y nh\\u1EADp trailer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          label: \"H\\xECnh \\u1EA2nh\",\n          children: getFieldDecorator('HinhAnh', {\n            rules: [{\n              required: true,\n              message: 'Hãy nhập URL hình ảnh !'\n            }],\n            valuePropName: \"fileList\",\n            getValueFromEvent: this.normFile,\n            initialValue: movie.MaPhim ? [{\n              uid: \"-1\",\n              name: this.cutString(movie.HinhAnh),\n              status: \"done\",\n              url: movie.HinhAnh\n            }] : null\n          })( /*#__PURE__*/_jsxDEV(Upload, {\n            beforeUpload: () => {\n              return false;\n            },\n            customRequest: dummyRequest,\n            listType: \"picture\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                type: \"upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 37\n              }, this), \" Upload\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          label: \"M\\xF4 T\\u1EA3\",\n          children: getFieldDecorator('MoTa', {\n            rules: [{\n              required: true,\n              message: 'Hãy nhập mô tả cho phim !'\n            }],\n            initialValue: movie.MoTa\n          })( /*#__PURE__*/_jsxDEV(TextArea, {\n            placeholder: \"Nh\\u1EADp n\\u1ED9i dung\",\n            autoSize: {\n              minRows: 3,\n              maxRows: 5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          style: {\n            marginLeft: 185\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Ng\\xE0y Kh\\u1EDFi Chi\\u1EBFu\",\n            style: {\n              width: 500\n            },\n            children: getFieldDecorator('NgayKhoiChieu', {\n              rules: [{\n                required: true,\n                message: 'Hãy nhập ngày khởi chiếu phim !'\n              }],\n              initialValue: this.state.maPhim ? moment(movie.NgayKhoiChieu, dateFormat) : moment(undefined)\n            })( /*#__PURE__*/_jsxDEV(DatePicker, {\n              format: dateFormat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 32\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u0110\\xE1nh Gi\\xE1\",\n            style: {\n              width: 400\n            },\n            children: getFieldDecorator('DanhGia', {\n              rules: [{\n                required: true,\n                message: 'Hãy nhập đánh giá !'\n              }],\n              initialValue: movie.DanhGia\n            })( /*#__PURE__*/_jsxDEV(InputNumber, {\n              min: 0,\n              max: 10,\n              step: 0.1,\n              placeholder: \"H\\xE3y nh\\u1EADp \\u0111\\xE1nh gi\\xE1 phim\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 32\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          label: \"\\u0110\\u1EA1o Di\\u1EC5n\",\n          children: getFieldDecorator('DaoDien', {\n            rules: [{\n              required: false,\n              message: 'Hãy nhập tên đạo diễn !'\n            }],\n            initialValue: movie.DaoDien\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"H\\xE3y nh\\u1EADp t\\xEAn \\u0111\\u1EA1o di\\u1EC5n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          label: \"Di\\u1EC5n Vi\\xEAn\",\n          children: getFieldDecorator('DienVien', {\n            rules: [{\n              required: false,\n              message: 'Hãy nhập các diễn viên trong phim !'\n            }],\n            initialValue: movie.DienVien\n          })( /*#__PURE__*/_jsxDEV(TextArea, {\n            placeholder: \"Nh\\u1EADp n\\u1ED9i dung\",\n            autoSize: {\n              minRows: 2,\n              maxRows: 5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          label: \"\\u0110\\u1ED9 Tu\\u1ED5i\",\n          children: getFieldDecorator('DoTuoi', {\n            rules: [{\n              required: false,\n              message: 'Hãy nhập tuổi cho phép !'\n            }],\n            initialValue: movie.DoTuoi\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"H\\xE3y nh\\u1EADp gi\\u1EDBi h\\u1EA1n tu\\u1ED5i cho ph\\xE9p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          label: \"B\\xED Danh\",\n          children: getFieldDecorator('BiDanh', {\n            rules: [{\n              required: false,\n              message: 'Hãy nhập bí danh !'\n            }],\n            initialValue: movie.BiDanh\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"B\\xED Danh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          type: \"flex\",\n          justify: \"center\",\n          style: {\n            marginLeft: 220\n          },\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n              label: \"X\\xF3a\",\n              children: getFieldDecorator('DaXoa', {\n                initialValue: movie.DaXoa,\n                valuePropName: 'checked'\n              })( /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 36\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n              label: \"\\u0110ang Chi\\u1EBFu\",\n              children: getFieldDecorator('KhoiChieu', {\n                initialValue: movie.KhoiChieu,\n                valuePropName: 'checked'\n              })( /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 36\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n              label: \"S\\u1EAFp Chi\\u1EBFu\",\n              children: getFieldDecorator('SapChieu', {\n                initialValue: movie.SapChieu,\n                valuePropName: 'checked'\n              })( /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 36\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn__formMovie text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginRight: 20,\n              width: 150\n            },\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: this.state.maPhim ? 'Update' : 'Create'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginLeft: 20,\n              width: 150\n            },\n            type: \"default\",\n            htmlType: \"button\",\n            children: \"H\\u1EE7y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    movieInfor: state.MovieManageReducer.movieInfor,\n    updateResult: state.MovieManageReducer.updateResult,\n    createResult: state.MovieManageReducer.createResult\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getMovieDetail: maPhim => {\n      dispatch(getMovieDetailAction(maPhim));\n    },\n    updateMovie: movie => {\n      dispatch(updateMovieAction(movie));\n    },\n    createMovie: movie => {\n      dispatch(createMovieAction(movie));\n    },\n    uploadHinhAnh: file => {\n      dispatch(UploadHinhAnhAction(file));\n    }\n  };\n};\n\nexport default compose(Form.create(), connect(mapStateToProps, mapDispatchToProps))(FormMovieAction);","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Frontend/React54/src/components/layoutAdmin/MovieMange/FormMovieAction.jsx"],"names":["React","Component","connect","Checkbox","Form","Input","InputNumber","Button","DatePicker","Row","Col","Upload","Icon","moment","compose","getMovieDetailAction","updateMovieAction","createMovieAction","UploadHinhAnhAction","isEqual","TextArea","dateFormat","dummyRequest","file","onSuccess","setTimeout","FormMovieAction","constructor","props","uploadHinhAnh","tenPhim","fileHinhAnh","formData","FormData","set","append","originFileObj","handleSubmit","e","preventDefault","form","validateFields","err","values","hinhAnh","hinhAnhFinal","map","img","i","console","log","name","state","maPhim","updateValues","format","updateMovie","updateResult","TenPhim","createValues","createMovie","createResult","normFile","Array","isArray","fileList","cutString","string","NewText","replace","match","params","MaPhim","movieInfor","BiDanh","Trailer","HinhAnh","MoTa","NgayKhoiChieu","DanhGia","DienVien","DaoDien","DoTuoi","DaXoa","KhoiChieu","SapChieu","selectedFile","selectedFileList","componentDidMount","getMovieDetail","getDerivedStateFromProps","nextProps","prevState","handleChange","field","Object","assign","target","value","setState","render","movie","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","rules","required","message","initialValue","onChange","bind","valuePropName","getValueFromEvent","uid","status","url","minRows","maxRows","marginLeft","width","undefined","marginRight","mapStateToProps","MovieManageReducer","mapDispatchToProps","dispatch","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Checkbox, Form, Input, InputNumber, Button, DatePicker, Row, Col, Upload, Icon } from 'antd' // Popconfirm, Icon\nimport moment from 'moment';\nimport { compose } from 'redux';\n// Redux\nimport { getMovieDetailAction, updateMovieAction, createMovieAction, UploadHinhAnhAction } from '../../../redux/actions/MovieManageAction';\nimport { isEqual } from 'lodash';\n\nconst { TextArea } = Input;\nconst dateFormat = \"DD/MM/YYYY\";\nconst dummyRequest = ({ file, onSuccess }) => {\n    setTimeout(() => {\n        onSuccess(\"ok\");\n    }, 0);\n};\n\nclass FormMovieAction extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...this.state,\n            maPhim: this.props.match.params.MaPhim,\n            movieInfor: {\n                MaPhim: \"\",\n                TenPhim: \"\",\n                BiDanh: \"\",\n                Trailer: \"\",\n                HinhAnh: \"\",\n                MoTa: \"\",\n                NgayKhoiChieu: \"\",\n                DanhGia: \"\",\n                DienVien: \"\",\n                DaoDien: \"\",\n                DoTuoi: \"\",\n                DaXoa: false,\n                KhoiChieu: false,\n                SapChieu: false,\n            },\n            selectedFile: null,\n            selectedFileList: []\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.state.maPhim);\n        if (this.state.maPhim) {\n            this.props.getMovieDetail(this.state.maPhim);\n        }\n    }\n\n\n    // componentWillReceiveProps(nextProps) {\n    //     // console.log(\"nextProps\", nextProps);        \n    //     if (!isEqual(nextProps.movieInfor.MaPhim, this.state.MaPhim)) {\n    //         this.setState({ ...this.state, movieInfor: nextProps.movieInfor });\n    //     }\n    // }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        // console.log(\"nextProps\", nextProps);\n        // console.log(\"prevState\", prevState);\n        if (prevState.maPhim) {\n            if (!isEqual(nextProps.movieInfor.MaPhim, prevState.MaPhim)) {\n                return {\n                    ...prevState, movieInfor: nextProps.movieInfor\n                }\n            }\n        }\n        return null;\n    }\n\n    // componentWillReceiveProps(nextProps,nextState){\n    //     console.log(nextProps);\n    //     //Nay het xai dc roi\n    //     this.setState({\n    //         movieInfor: nextProps.movieInfor      \n    //     },() => {\n    //         console.log(\"setState\", this.state.movieInfor);\n    //     })\n\n    // }\n    uploadHinhAnh = (tenPhim, fileHinhAnh) => {\n        var formData = new FormData();\n        formData.set('tenPhim', tenPhim);\n        formData.append('file', fileHinhAnh.originFileObj);\n        this.props.uploadHinhAnh(formData);\n    }\n\n    handleChange(field, e) {\n        const movieInfor = Object.assign({}, this.state.movieInfor, { [field]: e.target.value });\n        this.setState(Object.assign({}, this.state, { movieInfor }));\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n            var hinhAnh = values['HinhAnh'];\n            let hinhAnhFinal;\n            let fileHinhAnh;\n            hinhAnh.map((img, i) => {\n                console.log(img);\n                \n                if (i === 0) {\n                    hinhAnhFinal = img.name;\n                    fileHinhAnh = img;\n                }\n            })\n            if (this.state.maPhim) {\n                const updateValues = {\n                    ...values,\n                    'HinhAnh': hinhAnhFinal,\n                    'NgayKhoiChieu': values['NgayKhoiChieu'].format('DD/MM/YYYY'),\n                };\n                this.props.updateMovie(updateValues);\n                setTimeout(() => {\n                    if (this.props.updateResult === \"Cập nhật phim thành công!\"){\n                        this.uploadHinhAnh(updateValues.TenPhim, fileHinhAnh)\n                    }\n                }, 3000);\n                // this.props.history.push('/movieadmin');\n            } else {\n                const createValues = {\n                    ...values,\n                    'HinhAnh': hinhAnhFinal,\n                    'NgayKhoiChieu': values['NgayKhoiChieu'].format('YYYY-MM-DD'),\n                };\n                console.log(\"createValues\", createValues);                \n                this.props.createMovie(createValues);\n                setTimeout(() => {\n                    if (this.props.createResult === \"Thêm phim thành công!\"){\n                        this.uploadHinhAnh(createValues.TenPhim, fileHinhAnh)\n                    }\n                }, 3000);\n            }\n        });\n    }\n\n    normFile = e => {\n        console.log(\"Upload event:\", e);\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n\n    cutString = (string) => {\n        var NewText = string.replace(\"https://localhost:44350/HinhAnh/\", \"\");\n        return NewText;\n    }\n\n\n    render() {\n        const movie = this.state.movieInfor;\n        // console.log(\"movie\", movie);    \n\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 14 },\n        };\n\n        return (\n            <div >\n                <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                    <Form.Item {...formItemLayout} label=\"Mã Phim\">\n                        {getFieldDecorator('MaPhim', {\n                            rules: [\n                                {\n                                    required: false,\n                                    message: 'Hãy nhập tên phim !',\n                                },\n                            ],\n                            initialValue: movie.MaPhim,\n                        })(<Input disabled />)}\n                    </Form.Item>\n                    <Form.Item {...formItemLayout} label=\"Tên Phim\">\n                        {getFieldDecorator('TenPhim', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: 'Hãy nhập tên phim !',\n                                },\n                            ],\n                            onChange: this.handleChange.bind(this, 'TenPhim'),\n                            initialValue: movie.TenPhim,\n                        })(<Input placeholder=\"Hãy nhập tên phim\" />)}\n                    </Form.Item>\n                    <Form.Item {...formItemLayout} label=\"Trailer\">\n                        {getFieldDecorator('Trailer', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: 'Hãy nhập trailer !',\n                                },\n                            ],\n                            initialValue: movie.Trailer,\n                        })(<Input placeholder=\"Hãy nhập trailer\" />)}\n                    </Form.Item>\n                    <Form.Item {...formItemLayout} label=\"Hình Ảnh\">\n                        {getFieldDecorator('HinhAnh', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: 'Hãy nhập URL hình ảnh !',\n                                },\n                            ],\n                            valuePropName: \"fileList\",\n                            getValueFromEvent: this.normFile,\n                            initialValue: movie.MaPhim ? [\n                                {\n                                    uid: \"-1\",\n                                    name: this.cutString(movie.HinhAnh),\n                                    status: \"done\",\n                                    url: movie.HinhAnh\n                                }\n                            ] : null,\n                        })(\n                            <Upload\n                                beforeUpload={() => {\n                                    return false;\n                                }}\n                                customRequest={dummyRequest}\n                                listType=\"picture\"\n                            >\n                                <Button>\n                                    <Icon type=\"upload\" /> Upload\n                                </Button>\n                                {/* <pre>{JSON.stringify(this.state.selectedFile, null, 2)}</pre> */}\n                            </Upload>\n                        )}\n                    </Form.Item>\n                    <Form.Item {...formItemLayout} label=\"Mô Tả\">\n                        {getFieldDecorator('MoTa', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: 'Hãy nhập mô tả cho phim !',\n                                },\n                            ],\n                            initialValue: movie.MoTa,\n                        })(<TextArea\n                            placeholder=\"Nhập nội dung\"\n                            autoSize={{ minRows: 3, maxRows: 5 }}\n                        />)}\n                    </Form.Item>\n                    <div className=\"d-flex\" style={{ marginLeft: 185 }}>\n                        <Form.Item label=\"Ngày Khởi Chiếu\" style={{ width: 500 }} >\n                            {getFieldDecorator('NgayKhoiChieu', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: 'Hãy nhập ngày khởi chiếu phim !',\n                                    },\n                                ],\n                                initialValue: this.state.maPhim ? moment(movie.NgayKhoiChieu, dateFormat) : moment(undefined),\n                            })(<DatePicker format={dateFormat} />)}\n                        </Form.Item>\n                        <Form.Item label=\"Đánh Giá\" style={{ width: 400 }}>\n                            {getFieldDecorator('DanhGia', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: 'Hãy nhập đánh giá !',\n                                    },\n                                ],\n                                initialValue: movie.DanhGia,\n                            })(<InputNumber min={0} max={10} step={0.1} placeholder=\"Hãy nhập đánh giá phim\" />)}\n                        </Form.Item>\n                    </div>\n                    <Form.Item {...formItemLayout} label=\"Đạo Diễn\">\n                        {getFieldDecorator('DaoDien', {\n                            rules: [\n                                {\n                                    required: false,\n                                    message: 'Hãy nhập tên đạo diễn !',\n                                },\n                            ],\n                            initialValue: movie.DaoDien,\n                        })(<Input placeholder=\"Hãy nhập tên đạo diễn\" />)}\n                    </Form.Item>\n                    <Form.Item {...formItemLayout} label=\"Diễn Viên\">\n                        {getFieldDecorator('DienVien', {\n                            rules: [\n                                {\n                                    required: false,\n                                    message: 'Hãy nhập các diễn viên trong phim !',\n                                },\n                            ],\n                            initialValue: movie.DienVien,\n                        })(<TextArea\n                            placeholder=\"Nhập nội dung\"\n                            autoSize={{ minRows: 2, maxRows: 5 }}\n                        />)}\n                    </Form.Item>\n                    <Form.Item {...formItemLayout} label=\"Độ Tuổi\">\n                        {getFieldDecorator('DoTuoi', {\n                            rules: [\n                                {\n                                    required: false,\n                                    message: 'Hãy nhập tuổi cho phép !',\n                                },\n                            ],\n                            initialValue: movie.DoTuoi,\n                        })(<Input placeholder=\"Hãy nhập giới hạn tuổi cho phép\" />)}\n                    </Form.Item>\n                    <Form.Item {...formItemLayout} label=\"Bí Danh\">\n                        {getFieldDecorator('BiDanh', {\n                            rules: [\n                                {\n                                    required: false,\n                                    message: 'Hãy nhập bí danh !',\n                                },\n                            ],\n                            initialValue: movie.BiDanh,\n                        })(<Input placeholder=\"Bí Danh\" />)}\n                    </Form.Item>\n                    <Row type=\"flex\" justify=\"center\" style={{ marginLeft: 220 }}>\n                        <Col span={8}>\n                            <Form.Item {...formItemLayout} label=\"Xóa\">\n                                {getFieldDecorator('DaXoa', {\n                                    initialValue: movie.DaXoa,\n                                    valuePropName: 'checked'\n                                })(<Checkbox></Checkbox>)}\n                            </Form.Item>\n                        </Col>\n                        <Col span={8}>\n                            <Form.Item {...formItemLayout} label=\"Đang Chiếu\">\n                                {getFieldDecorator('KhoiChieu', {\n                                    initialValue: movie.KhoiChieu,\n                                    valuePropName: 'checked'\n                                })(<Checkbox></Checkbox>)}\n                            </Form.Item>\n                        </Col>\n                        <Col span={8}>\n                            <Form.Item {...formItemLayout} label=\"Sắp Chiếu\">\n                                {getFieldDecorator('SapChieu', {\n                                    initialValue: movie.SapChieu,\n                                    valuePropName: 'checked'\n                                })(<Checkbox></Checkbox>)}\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <div className=\"btn__formMovie text-center\">\n                        <Button style={{ marginRight: 20, width: 150 }} type=\"primary\" htmlType=\"submit\">{this.state.maPhim ? 'Update' : 'Create'}</Button>\n                        <Button style={{ marginLeft: 20, width: 150 }} type=\"default\" htmlType=\"button\" >Hủy</Button>\n                    </div>\n                </Form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        movieInfor: state.MovieManageReducer.movieInfor,\n        updateResult: state.MovieManageReducer.updateResult,\n        createResult: state.MovieManageReducer.createResult\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getMovieDetail: (maPhim) => {\n            dispatch(getMovieDetailAction(maPhim))\n        },\n        updateMovie: (movie) => {\n            dispatch(updateMovieAction(movie))\n        },\n        createMovie: (movie) => {\n            dispatch(createMovieAction(movie))\n        },\n        uploadHinhAnh: (file) => {\n            dispatch(UploadHinhAnhAction(file))\n        }\n    }\n}\n\nexport default compose(\n    Form.create(),\n    connect(mapStateToProps, mapDispatchToProps)\n)(FormMovieAction);\n"]},"metadata":{},"sourceType":"module"}