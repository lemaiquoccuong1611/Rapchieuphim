{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\React54\\\\src\\\\components\\\\layoutAdmin\\\\TheaterManage\\\\Ghe.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bookingSeatAction, chonGheAdminAction, updateSeatAction } from '../../../redux/actions/BookingManageAction';\nimport { isEqual } from 'lodash';\nimport { Menu, Dropdown, Tooltip } from 'antd';\nimport { element } from 'prop-types';\nimport { showMessageAlert } from '../../../templates/SweetAlert';\nimport { capNhatLoaiGheAction } from '../../../redux/actions/BookingManageAction';\n\nclass Ghe extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = () => {\n      this.setState({\n        dangChon: false\n      });\n    };\n\n    this.renderGhe = () => {\n      const onClick = ({\n        key\n      }) => {\n        if (key == 1) {\n          let mangGheUpdate = this.props.dsGheChonUpdate;\n\n          if (mangGheUpdate.length === 0) {\n            showMessageAlert('Warning', 'Vui lòng chọn ghế', 'warning');\n          }\n\n          let tenLoaiGhe = 'Vip';\n          let mangGheUpdateTemp = [];\n          mangGheUpdate.map((ghe, index) => {\n            mangGheUpdateTemp.push({\n              MaGhe: ghe.MaGhe\n            });\n          });\n\n          if (mangGheUpdateTemp.length > 0) {\n            let objectUpdate = {\n              MaRap: parseInt(this.props.maRap),\n              TenLoaiGhe: tenLoaiGhe,\n              DanhSachGheUpdate: mangGheUpdateTemp\n            };\n            console.log(objectUpdate);\n            this.props.capNhatLoaiGhe(objectUpdate);\n          }\n        }\n\n        if (key == 2) {\n          let mangGheUpdate = this.props.dsGheChonUpdate;\n\n          if (mangGheUpdate.length === 0) {\n            showMessageAlert('Warning', 'Vui lòng chọn ghế', 'warning');\n          }\n\n          let tenLoaiGhe = 'Thường';\n          let mangGheUpdateTemp = [];\n          mangGheUpdate.map((ghe, index) => {\n            mangGheUpdateTemp.push({\n              MaGhe: ghe.MaGhe\n            });\n          });\n\n          if (mangGheUpdateTemp.length > 0) {\n            let objectUpdate = {\n              MaRap: parseInt(this.props.maRap),\n              TenLoaiGhe: tenLoaiGhe,\n              DanhSachGheUpdate: mangGheUpdateTemp\n            };\n            console.log(objectUpdate);\n            this.props.capNhatLoaiGhe(objectUpdate);\n          }\n        }\n      };\n\n      const menu = /*#__PURE__*/_jsxDEV(Menu, {\n        onClick: onClick,\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"Vip\"\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"Th\\u01B0\\u1EDDng\"\n        }, \"2\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this);\n\n      const {\n        ghe,\n        index\n      } = this.props;\n      let classTrangThaiGhe = 'ghe ';\n      let tenGhe = ghe.STT;\n\n      if (ghe.DaDat) {\n        classTrangThaiGhe += ghe.DaDat ? 'gheDaDat ' : ' ';\n      } else {\n        if (this.state.dangDat) {\n          classTrangThaiGhe += 'gheDangDat ';\n        } else {\n          classTrangThaiGhe += ghe.LoaiGhe === 'Thường' ? 'ghe ' : ghe.LoaiGhe === 'Vip' ? 'gheVip ' : 'gheDoi';\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          overlay: menu,\n          trigger: ['contextMenu'],\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Click chu\\u1ED9t ph\\u1EA3i \\u0111\\u1EC3 edit gh\\u1EBF\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"idghe\",\n              onClick: this.chonGhe,\n              className: `${classTrangThaiGhe}`,\n              children: this.state.dangDat ? tenGhe : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.chonGhe = () => {\n      //Sau khi setState thay đổi trang thái ghế sẽ đưa dữ liệu lên reducer xử lý\n      // if (!this.state.dangChon) {\n      this.setState({\n        dangDat: !this.state.dangDat\n      }, () => {\n        const gheDuocChon = {\n          MaGhe: this.props.ghe.MaGhe,\n          STT: this.props.ghe.STT,\n          TenGhe: this.props.ghe.TenGhe,\n          DangDat: this.state.dangDat\n        };\n        this.props.chonGhe(gheDuocChon); //Gọi hàm đưa lên reducer\n      }); // }\n    };\n\n    this.alertMessage = () => {\n      console.log(\"Maximum is 10 tickets!!!\");\n    };\n\n    this.state = {\n      dangDat: false\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    console.log(\"nextProps\", nextProps);\n    console.log(\"prevState\", prevState); // return {\n    //     // ...prevState, danhSachGhe: nextProps.danhSachGhe\n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: this.renderGhe()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dsGheChonUpdate: state.BookingManageReducer.dsGheChonUpdate\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    chonGhe: gheDuocChon => {\n      dispatch(updateSeatAction(gheDuocChon));\n    },\n    capNhatLoaiGhe: mangGheCapNhat => {\n      dispatch(capNhatLoaiGheAction(mangGheCapNhat));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ghe);","map":{"version":3,"sources":["C:/Users/Acer/Desktop/React54/src/components/layoutAdmin/TheaterManage/Ghe.jsx"],"names":["React","Component","Fragment","connect","bookingSeatAction","chonGheAdminAction","updateSeatAction","isEqual","Menu","Dropdown","Tooltip","element","showMessageAlert","capNhatLoaiGheAction","Ghe","constructor","props","handleOnChange","setState","dangChon","renderGhe","onClick","key","mangGheUpdate","dsGheChonUpdate","length","tenLoaiGhe","mangGheUpdateTemp","map","ghe","index","push","MaGhe","objectUpdate","MaRap","parseInt","maRap","TenLoaiGhe","DanhSachGheUpdate","console","log","capNhatLoaiGhe","menu","classTrangThaiGhe","tenGhe","STT","DaDat","state","dangDat","LoaiGhe","chonGhe","gheDuocChon","TenGhe","DangDat","alertMessage","getDerivedStateFromProps","nextProps","prevState","render","mapStateToProps","BookingManageReducer","mapDispatchToProps","dispatch","mangGheCapNhat"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux';\nimport { bookingSeatAction, chonGheAdminAction, updateSeatAction } from '../../../redux/actions/BookingManageAction';\nimport { isEqual } from 'lodash';\nimport { Menu, Dropdown, Tooltip } from 'antd';\nimport { element } from 'prop-types';\nimport { showMessageAlert } from '../../../templates/SweetAlert';\nimport { capNhatLoaiGheAction } from '../../../redux/actions/BookingManageAction';\n\n\nclass Ghe extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dangDat: false\n        }\n    }\n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        console.log(\"nextProps\", nextProps);\n        console.log(\"prevState\", prevState);\n        // return {\n        //     // ...prevState, danhSachGhe: nextProps.danhSachGhe\n        // }\n    }\n\n\n    handleOnChange = () => {\n        this.setState({\n            dangChon: false\n        })\n    }\n\n    renderGhe = () => {\n        const onClick = ({ key }) => {\n            if (key == 1) {\n                let mangGheUpdate = this.props.dsGheChonUpdate;\n                if (mangGheUpdate.length === 0) {\n                    showMessageAlert('Warning', 'Vui lòng chọn ghế', 'warning')\n                }\n                let tenLoaiGhe = 'Vip';\n                let mangGheUpdateTemp = [];\n                mangGheUpdate.map((ghe, index) => {\n                    mangGheUpdateTemp.push({\n                        MaGhe: ghe.MaGhe\n                    })\n                })\n                if (mangGheUpdateTemp.length > 0) {\n                    let objectUpdate = {\n                        MaRap: parseInt(this.props.maRap),\n                        TenLoaiGhe: tenLoaiGhe,\n                        DanhSachGheUpdate: mangGheUpdateTemp\n                    }\n                    console.log(objectUpdate);\n                    this.props.capNhatLoaiGhe(objectUpdate);\n                }\n            }\n\n            if (key == 2) {\n                let mangGheUpdate = this.props.dsGheChonUpdate;\n                if (mangGheUpdate.length === 0) {\n                    showMessageAlert('Warning', 'Vui lòng chọn ghế', 'warning')\n                }\n                let tenLoaiGhe = 'Thường';\n                let mangGheUpdateTemp = [];\n                mangGheUpdate.map((ghe, index) => {\n                    mangGheUpdateTemp.push({\n                        MaGhe: ghe.MaGhe\n                    })\n                })\n                if (mangGheUpdateTemp.length > 0) {\n                    let objectUpdate = {\n                        MaRap: parseInt(this.props.maRap),\n                        TenLoaiGhe: tenLoaiGhe,\n                        DanhSachGheUpdate: mangGheUpdateTemp\n                    }\n                    console.log(objectUpdate);\n                    this.props.capNhatLoaiGhe(objectUpdate);\n                }\n            }\n        };\n\n        const menu = (\n            <Menu onClick={onClick}>\n                <Menu.Item key=\"1\">Vip</Menu.Item>\n                <Menu.Item key=\"2\">Thường</Menu.Item>\n            </Menu>\n        );\n\n        const { ghe, index } = this.props;\n        let classTrangThaiGhe = 'ghe ';\n        let tenGhe = ghe.STT;\n        if (ghe.DaDat) {\n            classTrangThaiGhe += ghe.DaDat ? 'gheDaDat ' : ' ';\n        } else {\n            if (this.state.dangDat) {\n                classTrangThaiGhe += 'gheDangDat ';\n            } else {\n                classTrangThaiGhe += ghe.LoaiGhe === 'Thường' ? 'ghe ' : ghe.LoaiGhe === 'Vip' ? 'gheVip ' : 'gheDoi';\n            }\n        }\n\n        return (\n            <Fragment>\n                <Dropdown overlay={menu} trigger={['contextMenu']}>\n                    <Tooltip title=\"Click chuột phải để edit ghế\">\n                        <button id=\"idghe\" onClick={this.chonGhe} className={`${classTrangThaiGhe}`}>\n                            {this.state.dangDat ? tenGhe : ''}\n                        </button>\n                    </Tooltip>\n                </Dropdown>\n            </Fragment>\n        )\n    }\n\n    chonGhe = () => {\n        //Sau khi setState thay đổi trang thái ghế sẽ đưa dữ liệu lên reducer xử lý\n        // if (!this.state.dangChon) {\n        this.setState({\n            dangDat: !this.state.dangDat\n        }, () => {\n            const gheDuocChon = {\n                MaGhe: this.props.ghe.MaGhe,\n                STT: this.props.ghe.STT,\n                TenGhe: this.props.ghe.TenGhe,\n                DangDat: this.state.dangDat\n            }\n            this.props.chonGhe(gheDuocChon); //Gọi hàm đưa lên reducer\n        })\n        // }\n    }\n\n    alertMessage = () => {\n        console.log(\"Maximum is 10 tickets!!!\");\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.renderGhe()}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dsGheChonUpdate: state.BookingManageReducer.dsGheChonUpdate\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        chonGhe: (gheDuocChon) => {\n            dispatch(updateSeatAction(gheDuocChon))\n        },\n        capNhatLoaiGhe: (mangGheCapNhat) => {\n            dispatch(capNhatLoaiGheAction(mangGheCapNhat))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ghe)"]},"metadata":{},"sourceType":"module"}