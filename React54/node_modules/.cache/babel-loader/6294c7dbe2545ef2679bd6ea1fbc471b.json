{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\React54\\\\src\\\\components\\\\layoutAdmin\\\\BookingMange\\\\SeatInAdmin.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bookingSeatAction, chonGheAdminAction } from '../../../redux/actions/BookingManageAction';\nimport { isEqual } from 'lodash';\nimport { Menu, Dropdown } from 'antd';\nimport { element } from 'prop-types';\nimport { showMessageAlert } from '../../../templates/SweetAlert';\n\nclass SeatInAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = () => {\n      this.setState({\n        dangChon: false\n      });\n    };\n\n    this.renderGhe = () => {\n      const onClick = ({\n        key\n      }) => {\n        alert(`Click on item ${key}`);\n      };\n\n      const menu = /*#__PURE__*/_jsxDEV(Menu, {\n        onClick: onClick,\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"1st menu item\"\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"2nd memu item\"\n        }, \"2\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"3rd menu item\"\n        }, \"3\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this);\n\n      const {\n        ghe,\n        index\n      } = this.props;\n      let classTrangThaiGhe = 'ghe '; // let disabled = ghe.DaDat ? true : false;\n      // let tenGhe = ghe.DaDat ? 'X' : ghe.STT;\n\n      let tenGhe = ghe.STT;\n\n      if (ghe.DaDat) {\n        classTrangThaiGhe += ghe.DaDat ? 'gheDaDat ' : ' ';\n      } else {\n        if (this.state.dangChon) {\n          classTrangThaiGhe += 'gheDangDat ';\n        } else {\n          classTrangThaiGhe += ghe.LoaiGhe === 'Thường' ? 'ghe ' : ghe.LoaiGhe === 'Vip' ? 'gheVip ' : 'gheDoi';\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          overlay: menu,\n          trigger: ['contextMenu'],\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"idghe\",\n            onClick: this.chonGhe,\n            className: `${classTrangThaiGhe}`,\n            children: this.state.dangChon ? tenGhe : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.chonGhe = () => {\n      //Sau khi setState thay đổi trang thái ghế sẽ đưa dữ liệu lên reducer xử lý\n      if (!this.state.dangChon) {\n        this.setState({\n          dangChon: !this.state.dangChon\n        }, () => {\n          const gheDuocChon = this.props.ghe;\n          this.props.chonGheAdmin(gheDuocChon); //Gọi hàm đưa lên reducer\n        });\n      }\n    };\n\n    this.alertMessage = () => {\n      console.log(\"Maximum is 10 tickets!!!\");\n    };\n\n    this.state = {\n      dangChon: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: this.renderGhe()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    danhSachGheDaDat: state.BookingManageReducer.danhSachGheDaDat\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    chonGheAdmin: gheDuocChon => {\n      dispatch(chonGheAdminAction(gheDuocChon));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SeatInAdmin);","map":{"version":3,"sources":["C:/Users/Acer/Desktop/React54/src/components/layoutAdmin/BookingMange/SeatInAdmin.jsx"],"names":["React","Component","Fragment","connect","bookingSeatAction","chonGheAdminAction","isEqual","Menu","Dropdown","element","showMessageAlert","SeatInAdmin","constructor","props","handleOnChange","setState","dangChon","renderGhe","onClick","key","alert","menu","ghe","index","classTrangThaiGhe","tenGhe","STT","DaDat","state","LoaiGhe","chonGhe","gheDuocChon","chonGheAdmin","alertMessage","console","log","render","mapStateToProps","danhSachGheDaDat","BookingManageReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux';\nimport { bookingSeatAction, chonGheAdminAction } from '../../../redux/actions/BookingManageAction';\nimport { isEqual } from 'lodash';\nimport { Menu, Dropdown } from 'antd';\nimport { element } from 'prop-types';\nimport { showMessageAlert } from '../../../templates/SweetAlert';\n\n\nclass SeatInAdmin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dangChon: false\n        }\n    }\n\n    handleOnChange = () => {\n        this.setState({\n            dangChon: false\n        })\n    }\n\n\n\n    renderGhe = () => {\n        const onClick = ({ key }) => {\n            alert(`Click on item ${key}`);\n        };\n\n        const menu = (\n            <Menu onClick={onClick}>\n                <Menu.Item key=\"1\">1st menu item</Menu.Item>\n                <Menu.Item key=\"2\">2nd memu item</Menu.Item>\n                <Menu.Item key=\"3\">3rd menu item</Menu.Item>\n            </Menu>\n        );\n\n        const { ghe, index } = this.props;\n        let classTrangThaiGhe = 'ghe ';\n        // let disabled = ghe.DaDat ? true : false;\n        // let tenGhe = ghe.DaDat ? 'X' : ghe.STT;\n        let tenGhe = ghe.STT;\n\n        if (ghe.DaDat) {\n            classTrangThaiGhe += ghe.DaDat ? 'gheDaDat ' : ' ';\n        } else {\n            if (this.state.dangChon ) {\n                classTrangThaiGhe += 'gheDangDat ';\n            } else {\n                classTrangThaiGhe += ghe.LoaiGhe === 'Thường' ? 'ghe ' : ghe.LoaiGhe === 'Vip' ? 'gheVip ' : 'gheDoi';\n            }\n        }\n\n        return (\n            <Fragment>\n                <Dropdown overlay={menu} trigger={['contextMenu']}>\n                    <button id=\"idghe\"  onClick={this.chonGhe} className={`${classTrangThaiGhe}`}>\n                        {this.state.dangChon ? tenGhe : ''}\n                    </button>\n                </Dropdown>\n            </Fragment>\n        )\n    }\n\n    chonGhe = () => {\n        //Sau khi setState thay đổi trang thái ghế sẽ đưa dữ liệu lên reducer xử lý\n        if (!this.state.dangChon) {\n            this.setState({\n                dangChon: !this.state.dangChon\n            }, () => {\n                const gheDuocChon = this.props.ghe;\n                this.props.chonGheAdmin(gheDuocChon); //Gọi hàm đưa lên reducer\n            })\n        }\n    }\n\n    alertMessage = () => {\n        console.log(\"Maximum is 10 tickets!!!\");\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.renderGhe()}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        danhSachGheDaDat: state.BookingManageReducer.danhSachGheDaDat,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        chonGheAdmin: (gheDuocChon) => {\n            dispatch(chonGheAdminAction(gheDuocChon))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SeatInAdmin)"]},"metadata":{},"sourceType":"module"}