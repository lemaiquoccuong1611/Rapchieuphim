{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\React54\\\\src\\\\components\\\\layoutAdmin\\\\Dashboard\\\\StatisticDasboard.jsx\";\nimport React, { Component } from 'react';\nimport { Table, Card, DatePicker, Tag, Icon } from 'antd';\nimport { Bar } from 'ant-design-pro/lib/Charts';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { getThongKeSoLuongVeAction, getThongKeSLVeTheoNamAction, getThongKeDoanhThuTheoNamAction, getThongKeDoanhThuAction } from '../../../redux/actions/DashboardAction';\nimport { isEqual } from 'lodash';\nimport { G2, Chart, Geom, Axis, Tooltip, Coord, Label, Legend, View, Guide, Shape, Facet, Util } from \"bizcharts\";\nconst {\n  RangePicker,\n  MonthPicker\n} = DatePicker;\nconst monthFormat = 'DD/MM/YYYY';\nconst columns = [{\n  title: 'Cụm rạp',\n  dataIndex: 'TenCumRap',\n  key: 'TenCumRap',\n  align: 'center'\n}, {\n  title: 'Phim',\n  dataIndex: 'MaPhim',\n  key: 'MaPhim' + 'TenCumRap',\n  align: 'center'\n}, {\n  title: 'Số lượng ghế',\n  dataIndex: 'SoLuongGhe',\n  key: 'MaPhim',\n  align: 'center'\n}, {\n  title: 'Số Lượng Vé Bán Ra',\n  dataIndex: 'SoLuongVeBan',\n  key: 'SoLuongVeBan',\n  align: 'center'\n}];\nconst columnsDT = [{\n  title: 'Cụm rạp',\n  dataIndex: 'MaCumRap',\n  key: 'MaLichChieu',\n  align: 'center'\n}, {\n  title: 'Mã Phim',\n  dataIndex: 'MaPhim',\n  key: 'MaPhim' + 'MaCumRap',\n  align: 'center'\n}, {\n  title: 'Doanh thu (VND)',\n  dataIndex: 'DoanhThu',\n  key: 'DoanhThu',\n  align: 'center',\n  render: DoanhThu => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [DoanhThu.toLocaleString(), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 13\n  }, this)\n}];\nconst data = [{\n  year: \"1991\",\n  value: 3\n}, {\n  year: \"1992\",\n  value: 4\n}, {\n  year: \"1993\",\n  value: 3.5\n}, {\n  year: \"1994\",\n  value: 5\n}, {\n  year: \"1995\",\n  value: 4.9\n}, {\n  year: \"1996\",\n  value: 6\n}, {\n  year: \"1997\",\n  value: 7\n}, {\n  year: \"1998\",\n  value: 9\n}, {\n  year: \"1999\",\n  value: 13\n}];\n\nclass StatisticDasboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDSVeWithParams = (thang, nam, maHeThongRap) => {\n      this.props.getThongKeSoLuongVe(thang, nam, maHeThongRap);\n    };\n\n    this.handleDatePickerChange = (date, dateString) => {\n      console.log('NGAYBD, NGAYKT', date, dateString);\n\n      if (date) {\n        let NGAYBD = date[0].format('YYYY-MM-DD');\n        let NGAYKT = date[1].format('YYYY-MM-DD');\n        console.log('NGAYBD, NGAYKT', NGAYBD, NGAYKT);\n        this.props.getThongKeSoLuongVe(NGAYBD, NGAYKT, this.state.maHeThongRap);\n      }\n    };\n\n    this.handleDatePickerDTChange = (date, dateString) => {\n      console.log('NGAYBD, NGAYKT', date, dateString);\n\n      if (date) {\n        let NGAYBD = date[0].format('YYYY-MM-DD');\n        let NGAYKT = date[1].format('YYYY-MM-DD');\n        console.log('NGAYBD, NGAYKT', NGAYBD, NGAYKT);\n        this.props.getThongKeDoanhThu(NGAYBD, NGAYKT, this.state.maHeThongRap); // this.getDSVeWithParams(NGAYBD, NGAYKT, this.state.maHeThongRap)\n      }\n    };\n\n    this.handleOnChangeYearSLV = (date, dateString) => {\n      if (date) {\n        let year = date.format('YYYY');\n        console.log(year);\n        this.props.getThongKeSLVeTheoNam(year, this.state.maHeThongRap);\n      }\n    };\n\n    this.handleOnChangeYearDoanhThu = (date, dateString) => {\n      if (date) {\n        let year = date.format('YYYY');\n        console.log(year);\n        this.props.getThongKeDoanhThuTheoNam(year, this.state.maHeThongRap);\n      }\n    };\n\n    this.state = {\n      maHeThongRap: this.props.match.params.MaHeThongRap,\n      danhSachThongKeVe: [],\n      initBeginDate: moment().startOf('month').format('YYYY-MM-DD'),\n      initEndDate: moment().endOf('month').format('YYYY-MM-DD')\n    };\n  }\n\n  componentDidMount() {\n    // console.log(\"this.state.maHeThongRap\", this.state.maHeThongRap);\n    this.initData(this.state.maHeThongRap);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // console.log(\"nextProps\", nextProps);\n    // console.log(\"prevState\", prevState);\n    if (!isEqual(nextProps.match.params.MaHeThongRap, prevState.maHeThongRap)) {\n      return {\n        maHeThongRap: nextProps.match.params.MaHeThongRap\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"prevState\", prevState);\n    console.log(\"this.state\", this.state.maHeThongRap);\n\n    if (JSON.stringify(prevState.maHeThongRap) !== JSON.stringify(this.state.maHeThongRap)) {\n      this.initData(this.state.maHeThongRap);\n    } // console.log(\"componentDidUpdate\");        \n\n  }\n\n  initData(maHeThongRap) {\n    this.props.getThongKeSoLuongVe(this.state.initBeginDate, this.state.initEndDate, maHeThongRap);\n    this.props.getThongKeSLVeTheoNam(moment(this.state.initBeginDate).format('YYYY'), maHeThongRap);\n    this.props.getThongKeDoanhThu(this.state.initBeginDate, this.state.initEndDate, maHeThongRap);\n    this.props.getThongKeDoanhThuTheoNam(moment(this.state.initBeginDate).format('YYYY'), maHeThongRap);\n  }\n\n  render() {\n    // Mức biểu đồ\n    const cols = {\n      SoLuongVeBan: {\n        tickInterval: 20\n      }\n    };\n    const dataFake = [{\n      Thang: 1,\n      SoLuongVeBan: 120\n    }, {\n      Thang: 2,\n      SoLuongVeBan: 20\n    }, {\n      Thang: 3,\n      SoLuongVeBan: 30\n    }, {\n      Thang: 4,\n      SoLuongVeBan: 20\n    }, {\n      Thang: 5,\n      SoLuongVeBan: 20\n    }, {\n      Thang: 6,\n      SoLuongVeBan: 220\n    }, {\n      Thang: 7,\n      SoLuongVeBan: 40\n    }, {\n      Thang: 8,\n      SoLuongVeBan: 20\n    }, {\n      Thang: 9,\n      SoLuongVeBan: 20\n    }, {\n      Thang: 10,\n      SoLuongVeBan: 20\n    }, {\n      Thang: 11,\n      SoLuongVeBan: 20\n    }, {\n      Thang: 12,\n      SoLuongVeBan: 20\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"58%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            type: \"inner\",\n            title: \"Bi\\u1EC3u \\u0111\\u1ED3 s\\u1ED1 l\\u01B0\\u1EE3ng v\\xE9 b\\xE1n\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"year__content\",\n              children: [\"Choose year \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(MonthPicker, {\n                defaultValue: moment(this.state.initBeginDate, 'YYYY'),\n                placeholder: \"Select year\",\n                onChange: this.handleOnChangeYearSLV\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Chart, {\n              height: 400,\n              data: this.props.dsThongKeVeTheoNam,\n              scale: cols,\n              forceFit: true,\n              children: [/*#__PURE__*/_jsxDEV(Axis, {\n                title: true,\n                name: \"Thang\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Axis, {\n                title: true,\n                name: \"SoLuongVeBan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                crosshairs: {\n                  type: \"y\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Geom, {\n                type: \"interval\",\n                position: \"Thang*SoLuongVeBan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"40%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            type: \"inner\",\n            title: \"Th\\u1ED1ng k\\xEA doanh thu / th\\xE1ng (VND)\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"year__content\",\n              children: [\"Choose year \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(MonthPicker, {\n                defaultValue: moment(this.state.initBeginDate, 'YYYY'),\n                onChange: this.handleOnChangeYearDoanhThu,\n                placeholder: \"Select year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Chart, {\n              height: 400,\n              data: this.props.dsThongKeDoanhThuTheoNam,\n              scale: cols,\n              forceFit: true,\n              children: [/*#__PURE__*/_jsxDEV(Axis, {\n                name: \"Thang\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Axis, {\n                name: \"DoanhThu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                crosshairs: {\n                  type: \"y\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Geom, {\n                type: \"line\",\n                position: \"Thang*DoanhThu\",\n                size: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Geom, {\n                type: \"point\",\n                position: \"Thang*DoanhThu\",\n                size: 4,\n                shape: \"circle\",\n                style: {\n                  stroke: \"#fff\",\n                  lineWidth: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          type: \"inner\",\n          title: \"S\\u1ED1 l\\u01B0\\u1EE3ng v\\xE9 b\\xE1n \",\n          children: [\"Date Range: \", /*#__PURE__*/_jsxDEV(RangePicker, {\n            defaultValue: [moment(this.state.initBeginDate), moment(this.state.initEndDate)],\n            onChange: this.handleDatePickerChange,\n            format: monthFormat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            bordered: true,\n            rowKey: record => record.MaPhim + record.TenCumRap,\n            columns: columns,\n            dataSource: this.props.danhSachThongKeVe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          type: \"inner\",\n          title: \"Doanh thu\",\n          children: [\"Date Range: \", /*#__PURE__*/_jsxDEV(RangePicker, {\n            defaultValue: [moment(this.state.initBeginDate), moment(this.state.initEndDate)],\n            onChange: this.handleDatePickerDTChange,\n            format: monthFormat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            bordered: true,\n            rowKey: record => record.MaPhim + record.MaCumRap,\n            columns: columnsDT,\n            dataSource: this.props.dsThongKeDoanhThu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    danhSachThongKeVe: state.DashboardReducer.danhSachThongKeVe,\n    dsThongKeVeTheoNam: state.DashboardReducer.dsThongKeVeTheoNam,\n    dsThongKeDoanhThuTheoNam: state.DashboardReducer.dsThongKeDoanhThuTheoNam,\n    dsThongKeDoanhThu: state.DashboardReducer.dsThongKeDoanhThu\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getThongKeSoLuongVe: (beginDate, endDate, maHeThongRap) => {\n      dispatch(getThongKeSoLuongVeAction(beginDate, endDate, maHeThongRap));\n    },\n    getThongKeSLVeTheoNam: (nam, maHeThongRap) => {\n      dispatch(getThongKeSLVeTheoNamAction(nam, maHeThongRap));\n    },\n    getThongKeDoanhThuTheoNam: (nam, maHeThongRap) => {\n      dispatch(getThongKeDoanhThuTheoNamAction(nam, maHeThongRap));\n    },\n    getThongKeDoanhThu: (beginDate, endDate, maHeThongRap) => {\n      dispatch(getThongKeDoanhThuAction(beginDate, endDate, maHeThongRap));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatisticDasboard);","map":{"version":3,"sources":["C:/Users/Acer/Desktop/React54/src/components/layoutAdmin/Dashboard/StatisticDasboard.jsx"],"names":["React","Component","Table","Card","DatePicker","Tag","Icon","Bar","moment","connect","getThongKeSoLuongVeAction","getThongKeSLVeTheoNamAction","getThongKeDoanhThuTheoNamAction","getThongKeDoanhThuAction","isEqual","G2","Chart","Geom","Axis","Tooltip","Coord","Label","Legend","View","Guide","Shape","Facet","Util","RangePicker","MonthPicker","monthFormat","columns","title","dataIndex","key","align","columnsDT","render","DoanhThu","toLocaleString","data","year","value","StatisticDasboard","constructor","props","getDSVeWithParams","thang","nam","maHeThongRap","getThongKeSoLuongVe","handleDatePickerChange","date","dateString","console","log","NGAYBD","format","NGAYKT","state","handleDatePickerDTChange","getThongKeDoanhThu","handleOnChangeYearSLV","getThongKeSLVeTheoNam","handleOnChangeYearDoanhThu","getThongKeDoanhThuTheoNam","match","params","MaHeThongRap","danhSachThongKeVe","initBeginDate","startOf","initEndDate","endOf","componentDidMount","initData","getDerivedStateFromProps","nextProps","prevState","componentDidUpdate","prevProps","JSON","stringify","cols","SoLuongVeBan","tickInterval","dataFake","Thang","width","dsThongKeVeTheoNam","type","dsThongKeDoanhThuTheoNam","stroke","lineWidth","record","MaPhim","TenCumRap","MaCumRap","dsThongKeDoanhThu","mapStateToProps","DashboardReducer","mapDispatchToProps","dispatch","beginDate","endDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Table, Card, DatePicker, Tag, Icon } from 'antd';\nimport { Bar } from 'ant-design-pro/lib/Charts';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { getThongKeSoLuongVeAction, getThongKeSLVeTheoNamAction, getThongKeDoanhThuTheoNamAction, getThongKeDoanhThuAction } from '../../../redux/actions/DashboardAction';\nimport { isEqual } from 'lodash';\n\nimport {\n    G2,\n    Chart,\n    Geom,\n    Axis,\n    Tooltip,\n    Coord,\n    Label,\n    Legend,\n    View,\n    Guide,\n    Shape,\n    Facet,\n    Util\n} from \"bizcharts\";\n\n\nconst { RangePicker, MonthPicker } = DatePicker;\nconst monthFormat = 'DD/MM/YYYY';\n\nconst columns = [\n    {\n        title: 'Cụm rạp',\n        dataIndex: 'TenCumRap',\n        key: 'TenCumRap',\n        align: 'center'\n    },\n    {\n        title: 'Phim',\n        dataIndex: 'MaPhim',\n        key: 'MaPhim'+ 'TenCumRap',\n        align: 'center'\n    },\n    {\n        title: 'Số lượng ghế',\n        dataIndex: 'SoLuongGhe',\n        key: 'MaPhim',\n        align: 'center'\n    },\n    {\n        title: 'Số Lượng Vé Bán Ra',\n        dataIndex: 'SoLuongVeBan',\n        key: 'SoLuongVeBan',\n        align: 'center'\n    }\n\n]\n\nconst columnsDT = [\n    {\n        title: 'Cụm rạp',\n        dataIndex: 'MaCumRap',\n        key: 'MaLichChieu',\n        align: 'center'\n    },\n    {\n        title: 'Mã Phim',\n        dataIndex: 'MaPhim',\n        key: 'MaPhim'+'MaCumRap',\n        align: 'center'\n    },\n    {\n        title: 'Doanh thu (VND)',\n        dataIndex: 'DoanhThu',\n        key: 'DoanhThu',\n        align: 'center',\n        render: (DoanhThu) => (\n            <span>{DoanhThu.toLocaleString()} </span>\n        )\n    }\n\n]\n\n\nconst data = [\n    {\n        year: \"1991\",\n        value: 3\n    },\n    {\n        year: \"1992\",\n        value: 4\n    },\n    {\n        year: \"1993\",\n        value: 3.5\n    },\n    {\n        year: \"1994\",\n        value: 5\n    },\n    {\n        year: \"1995\",\n        value: 4.9\n    },\n    {\n        year: \"1996\",\n        value: 6\n    },\n    {\n        year: \"1997\",\n        value: 7\n    },\n    {\n        year: \"1998\",\n        value: 9\n    },\n    {\n        year: \"1999\",\n        value: 13\n    }\n];\n\nclass StatisticDasboard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            maHeThongRap: this.props.match.params.MaHeThongRap,\n            danhSachThongKeVe: [],\n            initBeginDate: moment().startOf('month').format('YYYY-MM-DD'),\n            initEndDate: moment().endOf('month').format('YYYY-MM-DD')\n        }\n    }\n\n    componentDidMount() {\n        // console.log(\"this.state.maHeThongRap\", this.state.maHeThongRap);\n        this.initData(this.state.maHeThongRap);\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        // console.log(\"nextProps\", nextProps);\n        // console.log(\"prevState\", prevState);\n\n        if (!isEqual(nextProps.match.params.MaHeThongRap, prevState.maHeThongRap)) {\n            return {\n                maHeThongRap: nextProps.match.params.MaHeThongRap\n            }\n        }\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(\"prevState\", prevState);\n        console.log(\"this.state\", this.state.maHeThongRap);\n\n        if (JSON.stringify(prevState.maHeThongRap) !== JSON.stringify(this.state.maHeThongRap)) {\n            this.initData(this.state.maHeThongRap);\n        }\n        // console.log(\"componentDidUpdate\");        \n    }\n\n\n\n    initData(maHeThongRap) {\n        this.props.getThongKeSoLuongVe(this.state.initBeginDate, this.state.initEndDate, maHeThongRap);\n        this.props.getThongKeSLVeTheoNam(moment(this.state.initBeginDate).format('YYYY'), maHeThongRap);\n        this.props.getThongKeDoanhThu(this.state.initBeginDate, this.state.initEndDate, maHeThongRap);\n        this.props.getThongKeDoanhThuTheoNam(moment(this.state.initBeginDate).format('YYYY'), maHeThongRap);\n    }\n\n\n    getDSVeWithParams = (thang, nam, maHeThongRap) => {\n        this.props.getThongKeSoLuongVe(thang, nam, maHeThongRap);\n    }\n    \n    // Thay đổi ngày thống kê số lượng vé\n\n    handleDatePickerChange = (date, dateString) => {\n        console.log('NGAYBD, NGAYKT', date, dateString);\n        if (date) {\n            let NGAYBD = date[0].format('YYYY-MM-DD');\n            let NGAYKT = date[1].format('YYYY-MM-DD');\n            console.log('NGAYBD, NGAYKT', NGAYBD, NGAYKT);\n            this.props.getThongKeSoLuongVe(NGAYBD, NGAYKT, this.state.maHeThongRap)\n        }\n    }\n\n    handleDatePickerDTChange= (date, dateString) => {\n        console.log('NGAYBD, NGAYKT', date, dateString);\n        if (date) {\n            let NGAYBD = date[0].format('YYYY-MM-DD');\n            let NGAYKT = date[1].format('YYYY-MM-DD');\n            console.log('NGAYBD, NGAYKT', NGAYBD, NGAYKT);\n            this.props.getThongKeDoanhThu(NGAYBD, NGAYKT, this.state.maHeThongRap)\n\n            // this.getDSVeWithParams(NGAYBD, NGAYKT, this.state.maHeThongRap)\n        }\n    }\n\n    handleOnChangeYearSLV = (date, dateString) => {\n        if (date) {\n            let year = date.format('YYYY');\n            console.log(year);\n            this.props.getThongKeSLVeTheoNam(year, this.state.maHeThongRap)\n        }\n    }\n\n    handleOnChangeYearDoanhThu = (date, dateString) => {\n        if (date) {\n            let year = date.format('YYYY');\n            console.log(year);\n            this.props.getThongKeDoanhThuTheoNam(year, this.state.maHeThongRap)\n        }\n    }\n\n    render() {\n        // Mức biểu đồ\n        const cols = {\n            SoLuongVeBan: {\n                tickInterval: 20\n            }\n        };\n\n        const dataFake = [\n            {\n                Thang: 1,\n                SoLuongVeBan: 120\n            },\n            {\n                Thang: 2,\n                SoLuongVeBan: 20\n            },\n            {\n                Thang: 3,\n                SoLuongVeBan: 30\n            },\n            {\n                Thang: 4,\n                SoLuongVeBan: 20\n            },\n            {\n                Thang: 5,\n                SoLuongVeBan: 20\n            },\n            {\n                Thang: 6,\n                SoLuongVeBan: 220\n            },\n            {\n                Thang: 7,\n                SoLuongVeBan: 40\n            },\n            {\n                Thang: 8,\n                SoLuongVeBan: 20\n            },\n            {\n                Thang: 9,\n                SoLuongVeBan: 20\n            },\n            {\n                Thang: 10,\n                SoLuongVeBan: 20\n            },\n            {\n                Thang: 11,\n                SoLuongVeBan: 20\n            },\n            {\n                Thang: 12,\n                SoLuongVeBan: 20\n            },\n        ]\n\n        return (\n            <div>\n                {/* <Tag color=\"orange\" style={{ fontSize: \"24px\", marginBottom: \"20px\", padding: \"10px 40px\" }}>{this.state.maHeThongRap}</Tag> */}\n                {/* Doanh thu */}\n                <div className=\"chart__content\">\n                    <div style={{ width: \"58%\" }}>\n                        <Card type=\"inner\" title=\"Biểu đồ số lượng vé bán\" >\n                            <div className=\"year__content\">\n                                Choose year &nbsp;&nbsp;<MonthPicker defaultValue={moment(this.state.initBeginDate, 'YYYY')} placeholder=\"Select year\" onChange={this.handleOnChangeYearSLV}/>\n                            </div>\n                            <Chart height={400} data={this.props.dsThongKeVeTheoNam} scale={cols} forceFit>\n                                <Axis title name=\"Thang\" />\n                                <Axis title name=\"SoLuongVeBan\" />\n                                <Tooltip\n                                    crosshairs={{\n                                        type: \"y\"\n                                    }}\n                                />\n                                <Geom type=\"interval\" position=\"Thang*SoLuongVeBan\"/>\n                            </Chart>\n                        </Card>\n                    </div>\n                    <div style={{ width: \"40%\" }}>\n                        <Card type=\"inner\" title=\"Thống kê doanh thu / tháng (VND)\">\n                            <div className=\"year__content\">\n                                Choose year &nbsp;&nbsp;<MonthPicker defaultValue={moment(this.state.initBeginDate, 'YYYY')} onChange={this.handleOnChangeYearDoanhThu} placeholder=\"Select year\" />\n                            </div>\n                            <Chart height={400} data={this.props.dsThongKeDoanhThuTheoNam} scale={cols} forceFit>\n                                <Axis name=\"Thang\" />\n                                <Axis name=\"DoanhThu\" />\n                                <Tooltip\n                                    crosshairs={{\n                                        type: \"y\"\n                                    }}\n                                />\n                                <Geom type=\"line\" position=\"Thang*DoanhThu\" size={2} />\n                                <Geom\n                                    type=\"point\"\n                                    position=\"Thang*DoanhThu\"\n                                    size={4}\n                                    shape={\"circle\"}\n                                    style={{\n                                        stroke: \"#fff\",\n                                        lineWidth: 1\n                                    }}\n                                />\n                            </Chart>\n                        </Card>\n                    </div>\n                </div>\n                {/* Danh sách số lượng vé bán theo cụm rạp */}\n                <div className=\"mt-5\">\n                    <Card type=\"inner\" title=\"Số lượng vé bán \" >\n                        Date Range: <RangePicker defaultValue={[moment(this.state.initBeginDate), moment(this.state.initEndDate)]} onChange={this.handleDatePickerChange} format={monthFormat} />\n                        <br /> <br />\n                        <Table bordered rowKey={record => record.MaPhim + record.TenCumRap} columns={columns} dataSource={this.props.danhSachThongKeVe} />\n                    </Card>\n                </div>\n                <div className=\"mt-5\">\n                    <Card type=\"inner\" title=\"Doanh thu\" >\n                        Date Range: <RangePicker defaultValue={[moment(this.state.initBeginDate), moment(this.state.initEndDate)]} onChange={this.handleDatePickerDTChange} format={monthFormat} />\n                        <br /> <br />\n                        <Table bordered rowKey={record => record.MaPhim + record.MaCumRap} columns={columnsDT} dataSource={this.props.dsThongKeDoanhThu} />\n                    </Card>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        danhSachThongKeVe: state.DashboardReducer.danhSachThongKeVe,\n        dsThongKeVeTheoNam: state.DashboardReducer.dsThongKeVeTheoNam,\n        dsThongKeDoanhThuTheoNam: state.DashboardReducer.dsThongKeDoanhThuTheoNam,\n        dsThongKeDoanhThu: state.DashboardReducer.dsThongKeDoanhThu,\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getThongKeSoLuongVe: (beginDate, endDate, maHeThongRap) => {\n            dispatch(getThongKeSoLuongVeAction(beginDate, endDate, maHeThongRap))\n        },\n        getThongKeSLVeTheoNam: (nam, maHeThongRap) => {\n            dispatch(getThongKeSLVeTheoNamAction(nam, maHeThongRap))\n        },\n        getThongKeDoanhThuTheoNam: (nam, maHeThongRap) => {\n            dispatch(getThongKeDoanhThuTheoNamAction(nam, maHeThongRap))\n        },\n        getThongKeDoanhThu: (beginDate, endDate, maHeThongRap) => {\n            dispatch(getThongKeDoanhThuAction(beginDate, endDate, maHeThongRap))\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatisticDasboard)\n"]},"metadata":{},"sourceType":"module"}