{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\React54\\\\src\\\\components\\\\layoutAdmin\\\\NavPath\\\\Breadcrumbs.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport withBreadcrumbs from \"react-router-breadcrumbs-hoc\";\nconst routes = [{\n  path: '/admin/statisticdashboard/',\n  breadcrumb: 'Dashboard'\n}, {\n  path: '/admin/movieadmin',\n  breadcrumb: 'QuanLyPhim'\n}, {\n  path: '/admin/movieadmin/formMovieAction/addMovie',\n  breadcrumb: 'ThemPhim'\n}, {\n  path: '/admin/movieadmin/formMovieAction/:MaPhim',\n  breadcrumb: 'CapNhatPhim'\n}, {\n  path: '/admin/theateradmin',\n  breadcrumb: 'QuanLyHeThongRap'\n}, {\n  path: '/admin/bookingmanage/showtimemanage',\n  breadcrumb: 'QuanLyLichChieu'\n}, {\n  path: '/admin/membermanage',\n  breadcrumb: 'QuanLyThanhVien'\n}];\n\nconst PureBreadcrumbs = ({\n  breadcrumbs\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"breadcrumbs\",\n  children: breadcrumbs.map(({\n    breadcrumb,\n    match\n  }, index) => index > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bc\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: match.url || \"\",\n      children: breadcrumb\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), index < breadcrumbs.length - 1 && \" / \"]\n  }, match.url, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this) : \"\")\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 5\n}, this);\n\n_c = PureBreadcrumbs;\nexport default withBreadcrumbs(routes)(PureBreadcrumbs);\n\nvar _c;\n\n$RefreshReg$(_c, \"PureBreadcrumbs\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/React54/src/components/layoutAdmin/NavPath/Breadcrumbs.jsx"],"names":["React","Link","withBreadcrumbs","routes","path","breadcrumb","PureBreadcrumbs","breadcrumbs","map","match","index","url","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,MAAMC,MAAM,GAAG,CACX;AAAEC,EAAAA,IAAI,EAAE,4BAAR;AAAsCC,EAAAA,UAAU,EAAE;AAAlD,CADW,EAEX;AAAED,EAAAA,IAAI,EAAE,mBAAR;AAA6BC,EAAAA,UAAU,EAAE;AAAzC,CAFW,EAGX;AAAED,EAAAA,IAAI,EAAE,4CAAR;AAAsDC,EAAAA,UAAU,EAAE;AAAlE,CAHW,EAIX;AAAED,EAAAA,IAAI,EAAE,2CAAR;AAAqDC,EAAAA,UAAU,EAAE;AAAjE,CAJW,EAKX;AAAED,EAAAA,IAAI,EAAE,qBAAR;AAA+BC,EAAAA,UAAU,EAAE;AAA3C,CALW,EAMX;AAAED,EAAAA,IAAI,EAAE,qCAAR;AAA+CC,EAAAA,UAAU,EAAE;AAA3D,CANW,EAOX;AAAED,EAAAA,IAAI,EAAE,qBAAR;AAA+BC,EAAAA,UAAU,EAAE;AAA3C,CAPW,CAAf;;AAUA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACpB;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA,YACKA,WAAW,CAACC,GAAZ,CAAgB,CAAC;AAAEH,IAAAA,UAAF;AAAcI,IAAAA;AAAd,GAAD,EAAwBC,KAAxB,KACbA,KAAK,GAAG,CAAR,gBAAY;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA,4BACR,QAAC,IAAD;AAAM,MAAA,EAAE,EAAED,KAAK,CAACE,GAAN,IAAa,EAAvB;AAAA,gBAA4BN;AAA5B;AAAA;AAAA;AAAA;AAAA,YADQ,EAEPK,KAAK,GAAGH,WAAW,CAACK,MAAZ,GAAqB,CAA7B,IAAkC,KAF3B;AAAA,KAAyBH,KAAK,CAACE,GAA/B;AAAA;AAAA;AAAA;AAAA,UAAZ,GAIM,EALT;AADL;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAML,e;AAYN,eAAeJ,eAAe,CAACC,MAAD,CAAf,CAAwBG,eAAxB,CAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport withBreadcrumbs from \"react-router-breadcrumbs-hoc\";\n\nconst routes = [\n    { path: '/admin/statisticdashboard/', breadcrumb: 'Dashboard' },\n    { path: '/admin/movieadmin', breadcrumb: 'QuanLyPhim' },\n    { path: '/admin/movieadmin/formMovieAction/addMovie', breadcrumb: 'ThemPhim' },\n    { path: '/admin/movieadmin/formMovieAction/:MaPhim', breadcrumb: 'CapNhatPhim' },\n    { path: '/admin/theateradmin', breadcrumb: 'QuanLyHeThongRap' },\n    { path: '/admin/bookingmanage/showtimemanage', breadcrumb: 'QuanLyLichChieu'}, \n    { path: '/admin/membermanage', breadcrumb: 'QuanLyThanhVien' },\n];\n\nconst PureBreadcrumbs = ({ breadcrumbs }) => (\n    <div className=\"breadcrumbs\">\n        {breadcrumbs.map(({ breadcrumb, match }, index) => (\n            index > 0 ? <div className=\"bc\" key={match.url}>\n                <Link to={match.url || \"\"}>{breadcrumb}</Link>\n                {index < breadcrumbs.length - 1 && \" / \"}\n            </div>\n                : \"\"\n        ))}\n    </div>\n);\n\nexport default withBreadcrumbs(routes)(PureBreadcrumbs);"]},"metadata":{},"sourceType":"module"}